sc_node_class
	-> atomic_logical_formula;
	-> target_class_1;
	-> target_class_2;
	-> current_class;;

sc_node_norole_relation
	-> nrel_implication;
	-> nrel_disjunction;;

sc_node_role_relation
	-> rrel_main_key_sc_element;;

sc_node_tuple
	-> conjunction_tuple;;

if = [*
    current_class _-> _element;;
*];;

then_1 = [*
        target_class_1 _-> _element;;
    *];;

then_2 = [*
        target_class_2 _-> _element;;
    *];;

conjunction_tuple
    -> then_1;
    -> then_2;
    <- nrel_conjunction;;

atomic_logical_formula
    -> if;
    -> then_1;
    -> then_2;;

@implication_edge = (if => conjunction_tuple);;
@implication_edge
    <- nrel_implication;
    <- rrel_main_key_sc_element: logic_rule;;

rules_set -> rrel_1: { logic_rule };;

target = [*
    target_class_1 _-> _target_element;;
    target_class_2 _-> _target_element;;
*];;

arguments
    -> argument;;

current_class
    -> argument;;

inference_logic_test_question
    -> rrel_1: target;
    -> rrel_2: rules_set;
    -> rrel_3: arguments;;




